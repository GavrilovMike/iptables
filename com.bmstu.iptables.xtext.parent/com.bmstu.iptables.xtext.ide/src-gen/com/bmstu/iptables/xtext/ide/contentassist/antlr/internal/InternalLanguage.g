/*
 * generated by Xtext 2.12.0
 */
grammar InternalLanguage;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package com.bmstu.iptables.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.bmstu.iptables.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.bmstu.iptables.xtext.services.LanguageGrammarAccess;

}
@parser::members {
	private LanguageGrammarAccess grammarAccess;

	public void setGrammarAccess(LanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getChainsAssignment()); }
		(rule__Model__ChainsAssignment)*
		{ after(grammarAccess.getModelAccess().getChainsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChain
entryRuleChain
:
{ before(grammarAccess.getChainRule()); }
	 ruleChain
{ after(grammarAccess.getChainRule()); } 
	 EOF 
;

// Rule Chain
ruleChain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChainAccess().getGroup()); }
		(rule__Chain__Group__0)
		{ after(grammarAccess.getChainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChainPart
entryRuleChainPart
:
{ before(grammarAccess.getChainPartRule()); }
	 ruleChainPart
{ after(grammarAccess.getChainPartRule()); } 
	 EOF 
;

// Rule ChainPart
ruleChainPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChainPartAccess().getGroup()); }
		(rule__ChainPart__Group__0)
		{ after(grammarAccess.getChainPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ChainType
ruleChainType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChainTypeAccess().getAlternatives()); }
		(rule__ChainType__Alternatives)
		{ after(grammarAccess.getChainTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule PolicyType
rulePolicyType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolicyTypeAccess().getAlternatives()); }
		(rule__PolicyType__Alternatives)
		{ after(grammarAccess.getPolicyTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChainTypeAccess().getINPUTEnumLiteralDeclaration_0()); }
		('INPUT')
		{ after(grammarAccess.getChainTypeAccess().getINPUTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getChainTypeAccess().getOUTPUTEnumLiteralDeclaration_1()); }
		('OUTPUT')
		{ after(grammarAccess.getChainTypeAccess().getOUTPUTEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getChainTypeAccess().getFORWARDEnumLiteralDeclaration_2()); }
		('FORWARD')
		{ after(grammarAccess.getChainTypeAccess().getFORWARDEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getChainTypeAccess().getPREROUTINGEnumLiteralDeclaration_3()); }
		('PREROUTING')
		{ after(grammarAccess.getChainTypeAccess().getPREROUTINGEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getChainTypeAccess().getPOSTROUTINGEnumLiteralDeclaration_4()); }
		('POSTROUTING')
		{ after(grammarAccess.getChainTypeAccess().getPOSTROUTINGEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PolicyType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolicyTypeAccess().getDROPEnumLiteralDeclaration_0()); }
		('DROP')
		{ after(grammarAccess.getPolicyTypeAccess().getDROPEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getPolicyTypeAccess().getACCEPTEnumLiteralDeclaration_1()); }
		('ACCEPT')
		{ after(grammarAccess.getPolicyTypeAccess().getACCEPTEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chain__Group__0__Impl
	rule__Chain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainAccess().getChainKeyword_0()); }
	'Chain'
	{ after(grammarAccess.getChainAccess().getChainKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chain__Group__1__Impl
	rule__Chain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainAccess().getChainTypeAssignment_1()); }
	(rule__Chain__ChainTypeAssignment_1)
	{ after(grammarAccess.getChainAccess().getChainTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chain__Group__2__Impl
	rule__Chain__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getChainAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chain__Group__3__Impl
	rule__Chain__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainAccess().getPolicyKeyword_3()); }
	'policy'
	{ after(grammarAccess.getChainAccess().getPolicyKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chain__Group__4__Impl
	rule__Chain__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainAccess().getPolicyTypeAssignment_4()); }
	(rule__Chain__PolicyTypeAssignment_4)
	{ after(grammarAccess.getChainAccess().getPolicyTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chain__Group__5__Impl
	rule__Chain__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getChainAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chain__Group__6__Impl
	rule__Chain__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainAccess().getTargetKeyword_6()); }
	'target'
	{ after(grammarAccess.getChainAccess().getTargetKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chain__Group__7__Impl
	rule__Chain__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainAccess().getProtKeyword_7()); }
	'prot'
	{ after(grammarAccess.getChainAccess().getProtKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chain__Group__8__Impl
	rule__Chain__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainAccess().getOptKeyword_8()); }
	'opt'
	{ after(grammarAccess.getChainAccess().getOptKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chain__Group__9__Impl
	rule__Chain__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainAccess().getSourceKeyword_9()); }
	'source'
	{ after(grammarAccess.getChainAccess().getSourceKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chain__Group__10__Impl
	rule__Chain__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainAccess().getDestinationKeyword_10()); }
	'destination'
	{ after(grammarAccess.getChainAccess().getDestinationKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chain__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainAccess().getPartsAssignment_11()); }
	(rule__Chain__PartsAssignment_11)*
	{ after(grammarAccess.getChainAccess().getPartsAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChainPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChainPart__Group__0__Impl
	rule__ChainPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainPartAccess().getTargetAssignment_0()); }
	(rule__ChainPart__TargetAssignment_0)
	{ after(grammarAccess.getChainPartAccess().getTargetAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChainPart__Group__1__Impl
	rule__ChainPart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainPartAccess().getProtAssignment_1()); }
	(rule__ChainPart__ProtAssignment_1)
	{ after(grammarAccess.getChainPartAccess().getProtAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainPart__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChainPart__Group__2__Impl
	rule__ChainPart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainPart__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainPartAccess().getOptAssignment_2()); }
	(rule__ChainPart__OptAssignment_2)
	{ after(grammarAccess.getChainPartAccess().getOptAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainPart__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChainPart__Group__3__Impl
	rule__ChainPart__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainPart__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainPartAccess().getSourceAssignment_3()); }
	(rule__ChainPart__SourceAssignment_3)
	{ after(grammarAccess.getChainPartAccess().getSourceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainPart__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChainPart__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainPart__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainPartAccess().getDestinationAssignment_4()); }
	(rule__ChainPart__DestinationAssignment_4)
	{ after(grammarAccess.getChainPartAccess().getDestinationAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ChainsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getChainsChainParserRuleCall_0()); }
		ruleChain
		{ after(grammarAccess.getModelAccess().getChainsChainParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__ChainTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChainAccess().getChainTypeChainTypeEnumRuleCall_1_0()); }
		ruleChainType
		{ after(grammarAccess.getChainAccess().getChainTypeChainTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__PolicyTypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChainAccess().getPolicyTypePolicyTypeEnumRuleCall_4_0()); }
		rulePolicyType
		{ after(grammarAccess.getChainAccess().getPolicyTypePolicyTypeEnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__PartsAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChainAccess().getPartsChainPartParserRuleCall_11_0()); }
		ruleChainPart
		{ after(grammarAccess.getChainAccess().getPartsChainPartParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainPart__TargetAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChainPartAccess().getTargetPolicyTypeEnumRuleCall_0_0()); }
		rulePolicyType
		{ after(grammarAccess.getChainPartAccess().getTargetPolicyTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainPart__ProtAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChainPartAccess().getProtSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getChainPartAccess().getProtSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainPart__OptAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChainPartAccess().getOptSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getChainPartAccess().getOptSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainPart__SourceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChainPartAccess().getSourceIP_ADDRESSTerminalRuleCall_3_0()); }
		RULE_IP_ADDRESS
		{ after(grammarAccess.getChainPartAccess().getSourceIP_ADDRESSTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainPart__DestinationAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChainPartAccess().getDestinationIP_ADDRESSTerminalRuleCall_4_0()); }
		RULE_IP_ADDRESS
		{ after(grammarAccess.getChainPartAccess().getDestinationIP_ADDRESSTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_IP_ADDRESS : ('anywhere'|'!'? RULE_INT '.' RULE_INT '.' RULE_INT '.' RULE_INT '/' RULE_INT (',' '!'? RULE_INT '.' RULE_INT '.' RULE_INT '.' RULE_INT '/' RULE_INT)*);

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
